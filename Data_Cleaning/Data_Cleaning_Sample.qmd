---
title: "Python Coding Sample"
format: html
author: Prashanthi Subbiah
---

```{python}
#| eval: false 
# Loading libraries for data cleaning
import pandas as pd
import numpy as np 
import geopandas as gpd

# Importing census data
tract_data_census_area = pd.read_csv("C:/Users/prash/Downloads/nhgis0005_csv/nhgis0005_csv/nhgis0005_ds258_2020_tract.csv")
county_data_census_population = pd.read_csv("C:/Users/prash/Downloads/nhgis0004_csv/nhgis0004_csv/nhgis0004_ts_nominal_county.csv")

# Exploring data 
tract_data_census_area.columns # Has area by tract
county_data_census_population.columns # Has population by county

# Printing summary table to understand spread of area 
print(tract_data_census_area[['AREALAND']].describe()) # Since max = 2.215858e+11, unit is probably square meters, as followed in other census datasets

# Reference for AREALAND unit: https://forum.ipums.org/t/land-area-variable-for-1990-census-tracts/3836/3

# Filtering for states needed
states_needed = ['District of Columbia', 'Washington', 'Colorado', 'California', 'Michigan', 'Oregon', 'New Jersey', 'Texas', 'New Orleans', 'Georgia', 'Louisiana']
tract_data_census_area = tract_data_census_area[tract_data_census_area['STATE'].isin(states_needed)]
county_data_census_population = county_data_census_population[county_data_census_population['STATE'].isin(states_needed)]

# Merging datasets and dropping irrelevant columns
data_census_final = pd.merge(tract_data_census_area, county_data_census_population, on="STATE", how ='outer')
data_census_final = data_census_final[['STATE', 'COUNTY_x','AREALAND', 'A00AA2020']]

# List of county-state pairs to filter for them
county_state_combinations = [
    ('King County', 'Washington'),
    ('Boulder County', 'Colorado'),
    ('Los Angeles County', 'California'),
    ('Washtenaw County', 'Michigan'),
    ('Benton County', 'Oregon'),
    ('Mercer County', 'New Jersey'),
    ('Travis County', 'Texas'),
    ('Collin County', 'Texas'),
    ('Santa Clara County', 'California'),
    ('Orleans Parish', 'Louisiana'),
    ('Lane County', 'Oregon'),
    ('District of Columbia', 'District of Columbia'),
    ('San Diego County', 'California'),
    ('Clarke County', 'Georgia')
]

# Filtering the dataset
data_filtered = data_census_final[
    data_census_final[['COUNTY_x', 'STATE']].apply(tuple, axis=1).isin(county_state_combinations)
]

# Datasets with population data and area data - mean population and area by county
pop_df = data_filtered.groupby('COUNTY_x')['A00AA2020'].mean().reset_index() 
area_df = data_filtered.groupby('COUNTY_x')['AREALAND'].mean().reset_index() 

# Final merge 
final_df = pd.merge(pop_df, area_df, on="COUNTY_x", how ='outer')

# Converting area to square miles and calculation of population density per county
final_df['AREALAND_MILES2'] = final_df['AREALAND'] / 2_589_988
final_df['POP_DENSITY'] = final_df['A00AA2020'] / final_df['AREALAND_MILES2']

# Printing and exporting table
final_df.to_csv('campus_county_data.csv')
```

